<?php

/*
 * This file is part of the Incipio package.
 *
 * (c) Florian Lefevre
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace mgate\FormationBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FormationRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FormationRepository extends EntityRepository
{
    /**
     * @return array
     */
    public function findAllByMandat()
    {
        $qb = $this->_em->createQueryBuilder();
        $query = $qb->select('f')->from('mgateFormationBundle:Formation', 'f')
            ->orderBy('f.mandat', 'desc')
            ->orderBy('f.dateDebut', 'asc')
            ->leftJoin('f.formateurs', 'formateurs')
            ->addSelect('formateurs');

        $entities = $query->getQuery()->getResult();

        $formationsParMandat = array();
        foreach ($entities as $formation) {
            $mandat = $formation->getMandat();
            if (array_key_exists($mandat, $formationsParMandat)) {
                $formationsParMandat[$mandat][] = $formation;
            } else {
                $formationsParMandat[$mandat] = array($formation);
            }
        }

        return $formationsParMandat;
    }

    /**
     * Requete pour select l'ensemble des formations avec en jointure les diffÃ©rents OneToOne possibles
     */
    public function getAllFormations()
    {
        $qb = $this->_em->createQueryBuilder();
        $query = $qb->select('f')->from('mgateFormationBundle:Formation', 'f')
            ->leftJoin('f.formateurs', 'formateurs')
            ->addSelect('formateurs')
            ->leftJoin('f.membresPresents', 'membresPresents')
            ->addSelect('membresPresents');


        return $query->getQuery()->getResult();
    }
}
