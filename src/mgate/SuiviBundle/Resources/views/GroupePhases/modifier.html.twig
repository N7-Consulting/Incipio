{% extends "mgateSuiviBundle::layout.html.twig" %}
{% block content_bundle %}
<style>
       textarea{
         width: 95%;
         height: 100%;
         resize:vertical;
         }
         select{
         width: 98%;
         }

</style>

<h2>Modifier les {{ form.groupes | length  }} groupes</h2>
<form method="POST" {{ form_enctype(form) }}>
<p><input type="submit" value="Ajouter un groupe" name="add" class="btn btn-default"/>
 - <input type="submit" value="Enregistrer les groupes" class="btn btn-default" /></p>

        {# itere sur chaque tag existant et affiche son unique champ : name #}
            <div class="row groupes" id="groupes" data-prototype="{{ form_widget(form.groupes.vars.prototype) | e }}">
        {# itere sur chaque tag existant et affiche son unique champ : name #}
        {% for groupe in form.groupes %}

                <div class="col-md-6">
                    <table class="table table-striped table-bordered">
                        <tr>
                            <th colspan="2"><div class="btn-group"></div>       <span class="titregroupe"></span> {{  form_widget(groupe.numero)}}</th>
                        </tr>
                        <tr>
                            <th>Titre</th>
                            <td>{{  form_widget(groupe.titre)}}</td>
                        </tr>
                        <tr>
                            <th>Description</th>
                            <td>{{ form_widget(groupe.description)}}</td>
                        </tr>
                    </table>
                </div>
        {% endfor %}
            </div>

    <br />
      {{ form_rest(form) }}

<p><input type="submit" value="Ajouter un groupe" name="add" class="btn btn-default"/>
 - <input type="submit" value="Enregistrer les groupes" class="btn btn-default"/></p>

</form>

<a href="{{ path('mgateSuivi_etude_voir', {'numero': etude.numero}) }}">Retour à l'étude</a>

{% endblock %}

{% block javascript %}
    {{ parent() }}
    {{ form_javascript(form) }}

<script type="text/javascript">

    // Fenetre resumant
    $.ui.dialog.prototype._oldinit = $.ui.dialog.prototype._init;
    $.ui.dialog.prototype._init = function() {
        $(this.element).parent().css('numero', 'fixed');
        $(this.element).dialog("option",{
            resizeStop: function(event,ui) {
                var numero = [(Math.floor(ui.numero.left) - $(window).scrollLeft()),
                                (Math.floor(ui.numero.top) - $(window).scrollTop())];
                $(event.target).parent().css('numero', 'fixed');
                $(event.target).parent().dialog('option','numero',numero);
                return true;
            }
        });
        this._oldinit();
    };


    // Recupere le div qui contient la collection de tags
    var collectionHolder = $('.groupes');

    function updateOrder() {
        $('input.numero').each(function(i) {
            $(this).val( i );
        });
        $('.titregroupe').each(function(i) {
            $(this).text( 'groupe n°'+(i+1) );
        });
    }


    var isDirty = false;

    jQuery(document).ready(function() {

        updateOrder();


        //Verification avant de quitter
        $(':input').change(function(){
            if(!isDirty){
               isDirty = true;
            }
        });
        $(window).bind('beforeunload', function(){
            if(isDirty)
                return "Do you really want to leave now?";
        });
        $('form').submit(function() {
            isDirty = false;
            return true;
        });

        //Rajout des boutons (X, up, down) pour les groupes
        collectionHolder.find('div').each(function() {
            addgroupeBouton($(this));
        });

        //Ajouter le drag and drop
        collectionHolder.sortable({
            // limitons les deplacements sur l'axe des ordonnees, ce sera plus propre

            // Il faut cliquer sur cet element pour pouvoir initier le drag'n'drop
            //handle: '.sort-button',

            // Creons un joli trou style lors des deplacements
            //placeholder: 'ui-state-highlight',
            //forcePlaceholderSize: true,

            // Cette fonction permet a  notre ligne de conserver son formatage lors du deplacement
            // Pas vraiment utile, mais plus agreable
            helper: function(e, tr)
            {
              var $originals = tr.children();
              var $helper = tr.clone();
              $helper.children().each(function(index)
              {
                // Set helper cell sizes to match the original sizes
                $(this).width($originals.eq(index).width())
              });
              return $helper;
            },

            // La fonction appele quand un element change de numero
            // C'est le code vraiment utile, en fait
            update: function(){
                updateOrder();
            }

        });



    });

    function addgroupeBouton($tagFormLi) {
        var $delete = $('<button id="myButtonDelete" class="btn">X</button>');
        var $up = $('<button id="myButtonUp" class="btn">▲</button>');
        var $down = $('<button id="myButtonDown" class="btn">▼</button>');
        $tagFormLi.children().children().children().children().children().first().append($delete);
        $tagFormLi.children().children().children().children().children().first().append($up);
        $tagFormLi.children().children().children().children().children().first().append($down);

        $delete.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            //CONFIRM confirmation suppression
            var message = "Êtes vous sûr de vouloir supprimer cette groupe ?";
            bootbox.confirm(message, function(result) {
                if (result) {
                                // remove the li for the tag form
                    $tagFormLi.remove();
                    updateOrder();
                }
            });
           });

        $up.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            $tagFormLi.prev().before($tagFormLi);
            updateOrder();
        });
        $down.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            $tagFormLi.next().after($tagFormLi);
            updateOrder();
        });
    }

</script>


{% endblock %}
